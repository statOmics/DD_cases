"0","DGE_res <- pblapply(pb_ct, function(element){"
"0","    "
"0","    # get cell type name"
"0","    ct <- levels(droplevels(element$cell_type_curated))"
"0","    "
"0","    # create design matrix"
"0","    design <- model.matrix(~ Site + sex + Status_on_day_collection_summary, "
"0","                           colData(element))"
"0","    colnames(design) <- sub(""Status_on_day_collection_summary"", """", colnames(design))"
"0","    colnames(design)[1] <- ""Intercept"""
"0","    "
"0","    # Differential expression analysis with edgeR-NB"
"0","    y <- DGEList(counts=counts(element), samples=colData(element))"
"0","    y <- calcNormFactors(y)"
"0","    y <- estimateDisp(y,design)"
"0","    fit <- glmQLFit(y,design,robust=T)"
"0","    "
"0","    # Intermediate visualization"
"0","    par(mfrow=c(1,2))"
"0","    plotBCV(y, main = paste0(""BCV plot for "", ct), cex.main=0.7)"
"0","    plotQLDisp(fit, main = paste0(""QLDisp plot for "", ct), cex.main=0.7)"
"0","    "
"0","    # Differential testing"
"0","    resList_i <- vector(mode = ""list"", length = ncol(L))"
"0","    for(j in 1:ncol(L)){"
"0","      test <- glmQLFTest(fit, contrast=L[,j])"
"0","      resList_i[[j]] <- test$table"
"0","    }"
"0","    return(resList_i)"
"0","})"
"1",""
"1"," "
"1"," |                                                  |"
"1"," "
"1","0 % ~calculating  "
"1",""
"1"," "
"1"," |++++++++++                                        |"
"1"," "
"1","20% ~11s          "
